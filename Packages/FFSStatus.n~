FFS$Status$Help[flh_,cmd_,i_,pos_]:=Module[{m},
  If[flh[i]==="",
      m=Check[Cases[Cases[Help$Messages[1,4],{cmd[1],__},1,1][1,4],
        {cmd[2],__},1,1][1,2],""];
      If[m=="",m="No message available for "//cmd[2]//"."];
      m=StringReplace[m,{"\n"->" "}];
!      Print[m];
      CreateWindow[Name->ToLowerCase[cmd[2]]//"mess",
        OverrideRedirect->True,Position->pos,
        Message[Name->"mess",Evaluate[Text->m],Side->"top",
          Width->"9c",BackGround->"#ffffc0"]];
      ReplacePart[flh,m,i],
    RedrawWindow[cmd[2]//"mess"];flh]];

FFS$Status$hname[w_]:=w[StringPosition[w,"."][-1,1]+1,-2]//"mess";

FFSVarList={{"MOMENTUM",True,1E9,"GeV"},{"MASS",True,1E6,"MeV"},
     {"CHARGE",True,1," "},{"EMITX",True,1,"m"},{"EMITY",True,1,"m"},
     {"DP",True,1," "},{"DP0",True,1," "},{"PBUNCH",True,1E10,"E10"},
     {"MINCOUP",True,1," "},
     {"NP",True,1," "},{"GCUT",True,1," "},
     {"CONVERGENCE",True,1," "},
     {"MatchingResidual",False,1," "}};
ReadFFSVars:=Map[{#[1],#[2],ToExpression[#[1]]/#[3],#[3],#[4]}&,FFSVarList];

FFS$Save$Status[fv_,fl_]:=StandardForm[Module[{m},
  m=Catch[
    Do[Check[
      If[fv[i,2],ToExpression[fv[i,1]//" = "//fv[i,3]//" * "//fv[i,4]]],
      Throw[fv[i,1]]],
      {i,Length[fv]}];
    Do[Print[fl[i]];FFS[If[fl[i,2],"","NO"]//fl[i,1]],{i,Length[fl]}];
    CloseTk;""];
  If[m<>"",Print["Error in ",m]]]];

FFS$Status:=Module[
  {fl=FFSFlags[],fv=ReadFFSVars,h=6,hv=5,
   flh=Table["",{Length[fl]}],fvh=Table["",{Length[fv]}]},
  If[SAD$Tk$fn==0,OpenTk];
!SAD$Tk$fn=8;
  CreateWindow[Name->"ffsstatus",
    Frame[Name->"varall",Side->"top",
    Table[
      Frame[Name->"vars"//j,Width->"13c",Relief->"raised",
        BorderWidth->2,Side->"left",
          Table[
            Frame[Name->"var"//ii,Side->"top",Fill->"x",
              Message[Evaluate[Name->fv[ii,1],Text->fv[ii,1]//":"],
                Width->"10c",
                Side->"left"],
              Button[Evaluate[Name->(fv[ii,1]//"h")],Text->"?",
                Relief->"ridge",Side->"right",
                Bind->{{"Button-1",fvh=FFS$Status$Help[
                  fvh,{"special-variables",fv[i,1]},i,{$X,$Y}]},
                  {"ButtonRelease-1",WithdrawWindow[FFS$Status$hname[$W]]}}],
              Title[Evaluate[Name->fv[ii,1]//"u",Text->fv[ii,5]],
                Width->3,Side->"right"],
              If[fv[ii,2],
                  Entry[Evaluate[Name->fv[ii,1]//"v"],Width->10,Side->"right",
                    Variable->fv[i,3]],
                Message[Evaluate[Name->fv[ii,1]//"v",Text->(fv[ii,3]//"")],
                  Width->"10c",
                  Side->"right"]]]/.i->ii,
              {ii,j,Min[j+hv-1,Length[fv]]}]],
     {j,1,Length[fv],hv}]],
    Frame[Name->"flagall",Side->"top",
    Table[
      Frame[Name->"flags"//j,Width->"13c",Relief->"raised",
        BorderWidth->2,Side->"left",
          Table[
            Frame[Name->"flag"//ii,Side->"top",Fill->"x",
              CheckButton[Evaluate[Name->fl[ii,1],Text->fl[ii,1]],
                Variable->fl[i,2],Relief->"flat",Side->"left"],
              Button[Evaluate[Name->(fl[ii,1]//"h")],Text->"?",
                  Relief->"ridge",Side->"right",
                  Bind->{{"Button-1",flh=FFS$Status$Help[
                    flh,{"flags",fl[i,1]},i,{$X,$Y}]},
                    {"ButtonRelease-1",
                      WithdrawWindow[FFS$Status$hname[$W]]}}]]/.i->ii,
              {ii,j,Min[j+h-1,Length[fl]]}]],
     {j,1,Length[fl],h}]],
     Frame[Name->"command",Side->"top",Fill->"x",
       Button[Name->"ok",Relief->"raised",Text->"OK",Width->8,
         Padx->6,Pady->4,BackGround->"#ffffff",
         Command->FFS$Save$Status[fv,fl],Side->"right"],
       Button[Name->"can",Relief->"ridge",Text->"Cancel",Width->8,
         Padx->6,Pady->4,
         Command->CloseTk,Side->"right"]]
       ];
  While[c=Read[Tk$SAD$fn,String];c<=>EndOfFile,
    Print[c];
    If[c[1,7]=="unknown" || c[1,7]=="invalid" || c[1,8]=="expected",Print[c]];
    Check[ToExpression[c//";Print[Definition[fl]]"],]]];
