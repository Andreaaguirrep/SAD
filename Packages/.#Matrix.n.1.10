LinearSolve[a_,b_,opt___]:=Module[
  {e=Tolerance/.({opt}/.Threshold->Tolerance)/.Tolerance->1e-8},
  If[ComplexQ[a],
    LinearSolveComplex1[a,b,e],
    If[ComplexQ[b],
      LinearSolveComplex2[a,b,e],
      LinearSolveReal[a,b,e]]]];

LinearSolveComplex1[a_,b_,e_]:=Module[
  {re=Re[a],im=Im[a],rb=Re[b],ib=Im[b],s,l,s1},
  If[Length[Dimensions[b]]==1,
    s=LinearSolveReal[
      Join[MapThread[Join,{re,-im}],MapThread[Join,{im,re}]],
      Join[rb,ib],e];
    s=Partition[s,Length[s]/2];
    Complex[s[[1]],s[[2]]],
    s=LinearSolveReal[
      Join[MapThread[Join,{re,-im}],MapThread[Join,{im,re}]],
      MapThread[Join,{rb,ib}],e];
    l=Length[s[[1]]]/2;
    Map[(s1=Partition[#,l];Complex[s1[[1]],s1[[2]]])&,s]]];

LinearSolveComplex2[a_,b_,e_]:=Module[{s,re=Re[b],im=Im[b]},
  If[Length[Dimensions[b]]==1,
    s=LinearSolveReal[a,{re,im}];
    Complex[s[[1]],s[[2]]],
    s=Partition[LinearSolveReal[a,Join[re,im]],Length[b]];
    Complex[s[[1]],s[[2]]]]];

Inverse[m_,opt___]:=Module[{{u,w,v}=SingularValues[m,opt]},
  Transpose[v].(w*u)];

SingularValues[a_,opt___]:=Module[
  {{e,inv}={Tolerance,Inverse}
    /.({opt}/.Threshold->Tolerance)/.
    {Tolerance->1e-8,Inverse->True}},
  SingularValues1[a,e,inv]];

Protect[LinearSolve,LinearSolveComplex1,LinearSolveComplex2,
  SingularValues,Inverse];
