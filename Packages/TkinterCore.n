If[Not[FBoundQ$[TclArg]], Library@Require["SAD/Tkinter"]];

(* Create Tcl interpreter object *)
Tcl$Interp=TclCreateInterp[];

(* Define TclEval[], Tk$Echo *)
(* Note: This definition runs before Set[Tk$Echo, ___] via SetAutoLoad[] *)
(Tk$Echo=a_)^:=(
  Unprotect[TclEval];
  Clear[TclEval];
  Switch[a,
    -2,	TclEval[___]=Null,
    -1,	TclEval[x_,y___]:=Print["Tcl* ",x],
    1,	(
      TclEval[x_]:=(Print["Tcl> ",x];Tcl[x]);
      TclEval[x_,y_]:=(Print["Tcl> ",x];Tcl[x,y])),
    _,	TclEval=Tcl];
  Tk$EchoValue=a);
Tk$Echo:=Tk$EchoValue;
Tk$Echo=0;

(* Extract Tk version *)
Tk$FullVersion=TclEval["return $tk_patchLevel",String];
Tk$Version=ToExpression["{"//StringReplace[
  TclEval["return $tk_version",String],"."->","]//"}"];
Tk$MajorVersion=Tk$Version[[1]];
Tk$MinorVersion=Tk$Version[[2]];
Tk$PatchLevel=Tk$FullVersion[
  StringLength[TclEval["return $tk_version", String]]+1,-1];
If[Tk$PatchLevel[1] === ".",
  Tk$PatchLevel = ToExpression[Tk$PatchLevel[2,-1]]];
Protect[Tk$FullVersion,Tk$Version,
  Tk$MajorVersion,Tk$MinorVersion,Tk$PatchLevel];

(* Tkinter font rendering backend detection *)
$FontSystem=Switch[Which[
  (    Tk$MajorVersion >  8
    || Tk$MajorVersion == 8 && Tk$MinorVersion >= 5), (
      ToUpperCase[TclEval["tk::pkgconfig get fontsystem", String]]),
  True,	Null],

  "AQUA",	"Aqua",
  "XFT",	"Xft",
  _,		"X11"];
Protect[$FontSystem];

(* Setup default font setting *)
PkgConfig$DefaultList["Tkinter"->Join[
  {			(* Backend independent settings *)
    "Font:Weight"->"medium",
    "Font:Slant"->"roman",
    "Font:Size"->12,
    "AltFonts:AltScale"->1.15,
    "AltFonts:ScriptScale"->0.8,
    Null[]},

  Switch[$FontSystem,	(* Backend dependent settings *)
    "Aqua",	{
      "Font:SansSerif"->"helvetica",
      "Font:Serif"->"times",
      "Font:Fixed"->"courier",
      "Font:Terminal"->"fixed",
      "Font:Symbol"->"symbol",
      Null[]},

    "Xft",	{
      "Font:SansSerif"->"Arial",
      "Font:Serif"->"Times",
      "Font:Fixed"->"Mono",
      "Font:Terminal"->"Mono",
      "Font:Symbol"->"Symbol",
      Null[]},

    _,	{
      "Font:SansSerif"->"helvetica neue",
      "Font:Serif"->"utopia",
      "Font:Fixed"->"courier",
      "Font:Terminal"->"fixed",
      "Font:Symbol"->"symbol",
      Null[]}]]];

(* Default font reference proxy *)
$DefaultSansSerifFont	:= PkgConfig["Tkinter", "Font:SansSerif"];
$DefaultSerifFont	:= PkgConfig["Tkinter", "Font:Serif"];
$DefaultFixedFont	:= PkgConfig["Tkinter", "Font:Fixed"];
$DefaultTerminalFont	:= PkgConfig["Tkinter", "Font:Terminal"];
$DefaultSymbolFont	:= PkgConfig["Tkinter", "Font:Symbol"];

$DefaultFontWeight	:= PkgConfig["Tkinter", "Font:Weight"];
$DefaultFontSlant	:= PkgConfig["Tkinter", "Font:Slant"];
$DefaultFontSize	:= PkgConfig["Tkinter", "Font:Size"];

(* Is it really a good choice?   10/13/2012 K.O. 
$DefaultFont := {$DefaultTerminalFont, $DefaultFontSize};
*)
$DefaultFont := {$DefaultSansSerifFont, $DefaultFontSize};

(* Tk version dependent setup *)
Which[
  (* Current Supported Tcl/Tk 8.4.19 or 8.5.# (# >= 8) *)
  Tk$MajorVersion == 8,	TclEval["set ::tk::AlwaysShowSelection {1}"],

  True,	(* Nothing TODO *)];

! End of File
