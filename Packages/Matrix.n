With[{mineps=1e-12},

  LinearSolve[a_,b_,opt___]:=Module[
    {e=Max[Tolerance/.({opt}/.Threshold->Tolerance)/.Tolerance->1e-8,mineps]},
    If[ComplexQ[a],
      LinearSolveComplex1[a,b,e],
      If[ComplexQ[b],
        LinearSolveComplex2[a,b,e],
        LinearSolveReal[a,b,e]]]];

  LinearSolveComplex1[a_,b_,e_]:=Module[
    {re=Re[a],im=Im[a],rb=Re[b],ib=Im[b],s,l,s1},
    If[Length[Dimensions[b]]==1,
      s=LinearSolveReal[
        Join[MapThread[Join,{re,-im}],MapThread[Join,{im,re}]],
        Join[rb,ib],e];
      s=Partition[s,Length[s]/2];
      Complex[s[[1]],s[[2]]],
      s=LinearSolveReal[
        Join[MapThread[Join,{re,-im}],MapThread[Join,{im,re}]],
        MapThread[Join,{rb,ib}],e];
      l=Length[s[[1]]]/2;
      Map[(s1=Partition[#,l];Complex[s1[[1]],s1[[2]]])&,s]]];

  LinearSolveComplex2[a_,b_,e_]:=Module[{s,re=Re[b],im=Im[b]},
    If[Length[Dimensions[b]]==1,
      s=LinearSolveReal[a,{re,im}];
      Complex[s[[1]],s[[2]]],
      s=Partition[LinearSolveReal[a,Join[re,im]],Length[b]];
      Complex[s[[1]],s[[2]]]]];

  MatrixBalance[m_]:=Module[{l,r,{lm,wm}=Dimensions[m]},
    l=Min[lm,wm];
    r=Sqrt[MapThread[
      Max[1e-100,Abs[#]]/Max[1e-100,Abs[#2]]&,
      {Take[m,l],Take[Transpose[m],l]}]];
    {1/Join[r,Table[1,{lm-l}]],Join[r,Table[1,{wm-l}]]}];

  Inverse[m_,opt___]:=Module[{{r1,r2}=MatrixBalance[m],
    e=Max[Tolerance/.Override[{opt},Tolerance->mineps],mineps]},
    Transpose[LinearSolve[((r2*#)&/@m)*r1,DiagonalMatrix[r1],Tolerance->e]]*r2];

  SingularValues[a_,opt___]:=Module[
    {{e,inv}={Tolerance,Inverse}
      /.({opt}/.Threshold->Tolerance)/.
      {Tolerance->1e-8,Inverse->True}},
    SingularValues1[a,e,inv]];
  
  ];

Protect[LinearSolve,LinearSolveComplex1,LinearSolveComplex2,
  SingularValues,Inverse,MatrixBalance];

With[{f=#},
  f[a_Real,$Matrix[l_,x_]]^:=$Matrix[l,f[a,x]];
  f[a_Complex,$Matrix[l_,x_]]^:=$Matrix[l,f[a,x]];
  f[$Matrix[l_,x_],$Matrix[l_,y_]]^:=$Matrix[l,f[x,y]];
  f[$Matrix[{l__},x_],$Matrix[{l__,m__},y_]]^:=With[{n=Times@@{m}},
    $Matrix[{l,m},Flatten[f[Partition[x,n],y]]]]
  ]&/@{Plus,Times,Power};
With[{f=#},
  f[u___,a_Real,v___,$Matrix[l_,x_],w___]^:=f[u,v,w,$Matrix[l,f[a,x]]];
  f[u___,a_Complex,v___,$Matrix[l_,x_],w___]^:=f[u,v,w,$Matrix[l,f[a,x]]];
  f[u___,$Matrix[l_,x_],v___,$Matrix[l_,y_],w___]^:=f[u,v,w,$Matrix[l,f[x,y]]];
  f[u___,$Matrix[{l__},x_],v___,$Matrix[{l__,m__},y_],w___]^:=With[{n=Times@@{m}},
    f[u,v,w,$Matrix[{l,m},Flatten[f[Partition[x,n],y]]]]]
  ]&/@{Plus,Times};
$Matrix[l_,x_]^a_Real^:=$Matrix[l,x^a];
$Matrix[l_,x_]^a_Complex^:=$Matrix[l,x^a];
With[{f=Power},
  f[u___,a_Real,$Matrix[l_,x_],w___]^:=f[u,$Matrix[l,f[a,x]],w];
  f[u___,a_Complex,$Matrix[l_,x_],w___]^:=f[u,$Matrix[l,f[a,x]],w];
  f[u___,$Matrix[l_,x_],$Matrix[l_,y_],w___]^:=f[u,$Matrix[l,f[x,y]],w];
  f[u___,$Matrix[{l__},x_],$Matrix[{l__,m__},y_],w___]^:=With[{n=Times@@{m}},
    f[u,$Matrix[{l,m},Flatten[f[Partition[x,n],y]]],w]]
  ]&/@{Plus,Times};
With[{f=#},
  f[$Matrix[l_,x_],$Matrix[l_,y_]]^:=f[x,y]
  ]&/@{Equal,Unequal};

$Matrix[l_,x_][[p__]]^:=Which[Length[{p}]<>Length[l] || ~RealListQ[{p}],ToMatrix[FromMatrix[$Matrix[l,x]][[p]]],
  Length[l]==1,x[[p]],
  True,Module[{ind=$MatrixIndex[l,{p}]},
    Which[ind<0,Return[],
      ind==0,ToMatrix[FromMatrix[$Matrix[l,x]][[p]]],
      True,x[[ind]]]]];

ToMatrix[l_List]:=With[{d=Dimensions[l]},$Matrix[d,Flatten[l,Length[d]]]];
ToMatrix[l_]:=l;
FromMatrix[$Matrix[{_},x_]]:=x;
FromMatrix[$Matrix[l_,x_]]:=Module[{r=x},
  Scan[(r=Partition[r,#])&,Reverse[Rest[l]]];r];
FromMatrix[x_]:=x;

$MatrixIndex[l_,p_]:=Module[{ind,l1,m,pi},
  l1=MapThread[(ind=#2;
    If[ind<0,ind=#+ind+1];
    If[ind>#,If[#2>#,Message[999,General::index];Return[]]];
    If[ind==0,Return[0]];
    ind)&,{l,p}];
  pi=1;
  m=Append[Reverse[(pi*=#)&/@Reverse[Rest[l]]],1];
  1+Plus@@(m*(l1-1))];
