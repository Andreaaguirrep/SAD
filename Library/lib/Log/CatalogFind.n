!
! Log Catalog Find Method Mix-In Library
!
! Maintainor: A.Morita(4794)
! Revision:   $Id: CatalogFind.n,v 1.2 2005/08/01 00:35:59 amorita Exp $
! Style:      Mix-in Class Library
! Require:    ls[] method
!

! <<< Log$CatalogFind >>>
Log$CatalogFind=Class[{},
  {
    },
  {
    },

  (* Public API *)
  find[path_String, pattern_String, op:((_Rule|_RuleDelayed)...)] := Module[{
    opt = Override[op, Directory->False, Match->FullPath],
    base, i},

    i = StringLength[path]; While[i > 0 && path[i] === "/", i -= 1];
    base = If[i < StringLength[path] && path[i] === ":",
      path[1,i]//"/", path[1,i]];

    find$[base, pattern, (Directory/.opt) === True,
      (Match/.opt) === FullPath]];

  search[query$_String, op:((_Rule|_RuleDelayed)...)] := Module[{
    opt = Override[op, Match->FullPath], query, matchQ, result},

    query = Select[Map[query$[First[#] + 1, Second[#] -1]&,
      Partition[Join[{0}, Flatten[StringPosition[query$, " "]], {0}], 2]],
      StringLength[#] > 0 &];

    If[Length[query] < 1, Return[{}]];

    matchQ = If[(Match/.opt) === FullPath, StringMatchQ[#1, #2]&,
      With[{pos = StringPosition[#1, "/"]},
	StringMatchQ[If[pos === {}, #1, #1[pos[[-1,2]] + 1, -1]], #2]]&];

    result = find["", First[query], Null@@opt];
    Scan[With[{pattern = #},
      result = Select[result, matchQ[#, pattern]&]]&, Rest[query]];

    result];

  (* Internal API *)
  find$[base_String, pattern_String, showDir_, matchFull_] := With[{
    prefix = If[base === "", "", base//"/"]},
    Map[With[{full = prefix//#, entry = #},
      If[entry[-1] === "/", (* DirectoryQ *)
	Null[If[showDir && matchFull && StringMatchQ[full[1,-2], pattern],
	  full, Null[]],
	  Null@@find$[full[1,-2], pattern, showDir, matchFull]],
	If[StringMatchQ[If[matchFull, full, entry], pattern],
	  full, Null[]]]]&, ls[base]]];

  ];
! >>> Log$CatalogFind <<<

! End of File
