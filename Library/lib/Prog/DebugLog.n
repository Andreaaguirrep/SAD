!
! Debug Logger Mix-in Library
!
! Maintainor: A.Morita(4794)
! Revision:   $Id: DebugLog.n,v 1.17 2005/06/23 04:30:24 amorita Exp $
! Style:      Mix-in Class Library
! Require:    Misc/Convert.n
!
Library@Require["Misc/Convert.n"];

! <<< DebugLog Mix-in class >>>
DebugLog=Class[{},
  { DebugLog$Initialized = False,
    DebugLog$PanicMode, DebugLog$PanicHook,
    DebugLog$MaxCount = 1000,
    DebugLog$Count, DebugLog$Log,

    (* Profiling Flag *)
    LogProfile,

    (* Log Level Symbol *)
    INFO, NOTICE, WARN, ERROR, PANIC,
    DEBUG, DEBUG1, DEBUG2, DEBUG3, DEBUG4, DEBUG5, DEBUG6,
    PROF,   PROF1,  PROF2,  PROF3,  PROF4,  PROF5,  PROF6
    },
  { DebugLog$ClassName
    },

  Destructor[] := (Unprotect[DebugLog$ClassName]; Clear[DebugLog$ClassName]);

  Constructor[class_String] := (Unprotect[DebugLog$ClassName];
    DebugLog$ClassName = class;   Protect[DebugLog$ClassName]);

  DebugLog$Initialize[] := If[Not[DebugLog$Initialized],
    DebugLog$Initialized = True; Protect[DebugLog$Initialized];

    LogProfile[_, _] = False;

    Clear[INFO, NOTICE, WARN, ERROR, PANIC,
      DEBUG, DEBUG1, DEBUG2, DEBUG3, DEBUG4, DEBUG5, DEBUG6,
      PROF,   PROF1,  PROF2,  PROF3,  PROF4,  PROF5,  PROF6];
    SetAttributes[{INFO, NOTICE, WARN, ERROR, PANIC,
      DEBUG, DEBUG1, DEBUG2, DEBUG3, DEBUG4, DEBUG5, DEBUG6,
      PROF,   PROF1,  PROF2,  PROF3,  PROF4,  PROF5,  PROF6}, Constant];
    Protect[INFO, NOTICE, WARN, ERROR, PANIC,
      DEBUG, DEBUG1, DEBUG2, DEBUG3, DEBUG4, DEBUG5, DEBUG6,
      PROF,   PROF1,  PROF2,  PROF3,  PROF4,  PROF5,  PROF6];

    Clear[DebugLog$PanicHook, DebugLog$PanicMode];
    DebugLog$PanicHook = {}; DebugLog$PanicMode = False;
    Protect[DebugLog$PanicHook, DebugLog$PanicMode];

    Clear[DebugLog$Log]; DebugLog$Log[_] = Null; DebugLog$Count = 0;
    Protect[DebugLog$Count, DebugLog$Log]];

  DebugLog$TimeStamp[time_Real] := With[{date = ToDate[time, Tick->1]},
    StringJoin@@MapThread[Convert@Dec2Str, {date, {4, 2, 2, 2, 2, 2}}]];

  DebugLog$Logging[msg_String] := (
    Unprotect[DebugLog$Count, DebugLog$Log];
    DebugLog$Log[DebugLog$Count] = msg;
    DebugLog$Count = Mod[DebugLog$Count + 1, DebugLog$MaxCount];
    Protect[DebugLog$Count, DebugLog$Log]);

  DebugLog$LogDump[] := Module[{fp, i, msg,
    fn = StandardForm[StringJoin["DebugLog",
      If[StringQ[App$Name], "-"//App$Name, ""], "-",
      DebugLog$TimeStamp[FromDate[]], "-", GetPID[]]]},

    If[fp = OpenWrite[$HomeDirectory//"/"//fn]; fp <=> $Failed,
      Scan[With[{msg = DebugLog$Log[#]},
	If[StringQ[msg], WriteString[fp, msg//"\n"]; Pring[msg]]]&,
	Mod[Range[DebugLog$Count, DebugLog$Count + DebugLog$MaxCount - 1],
	  DebugLog$MaxCount]];

      WriteString[fp, "Creator: "
	//If[StringQ[App$Name], App$Name, "Unkown"]
	//If[StringQ[App$Version], " Version "//App$Version, ""]
	//If[StringQ[App$BuildID], " ("//App$BuildID//")", ""]
	//"\n"];

      Close[fp]]];

  DebugLog$Panic[] := (
    Unprotect[DebugLog$PanicMode];
    DebugLog$PanicMode = True;
    Protect[DebugLog$PanicMode];
    Scan[(Command/.#)&, DebugLog$PanicHook];
    DebugLog$Logging["CRASH DUMP: "//DateString[]];
    DebugLog$Logging["PROCESS HOST: "//HostName[]];
    DebugLog$Logging["PROCESS ARGV: "//$GetCommandLine[]];
    DebugLog$LogDump[];
    Table[Print[""]; Pause[0.2], {i, 10}];
    FFS["Abort"]);

  DebugLog$AddHook[PANIC, op:((_Rule|_RuleDelayed)...)] := (
    Unprotect[DebugLog$PanicHook];
    AppendTo[DebugLog$PanicHook, First[SwitchCases[Override[op],
      {RuleDelayed[Command, _]}]]];
    Protect[DebugLog$PanicHook]);

  Debug[type_Symbol, func_String, msg__] := Debug$[type,
    DebugLog$ClassName, func,
    StringJoin@@Join[{DebugLog$ClassName, "@", func, " "}, ToString/@{msg}]];

  Debug[type_Symbol, msg_String] := Debug$[type, False, False, msg];

  Debug$[type$_Symbol, class_, func_, msg$_String] := Module[{
    type, level = -5, prof = False, msg},

    msg = Switch[type$,
      DEBUG6, level =  6; "Debug6",
      DEBUG5, level =  5; "Debug5",
      DEBUG4, level =  4; "Debug4",
      DEBUG3, level =  3; "Debug3",
      DEBUG2, level =  2; "Debug2",
      DEBUG1, level =  1; "Debug1",
      DEBUG,  level =  0; "Debug0",

      PROF6, level =  6; prof = True; "Prof6",
      PROF5, level =  5; prof = True; "Prof5",
      PROF4, level =  4; prof = True; "Prof4",
      PROF3, level =  3; prof = True; "Prof3",
      PROF2, level =  2; prof = True; "Prof2",
      PROF1, level =  1; prof = True; "Prof1",
      PROF,  level =  0; prof = True; "Prof0",

      INFO,   level = -1; "Info",
      NOTICE, level = -2; "Notice",
      WARN,   level = -7; "Warn",
      ERROR,  level = -8; "Error",
      PANIC,  level = -9; "Panic",
      _,      StringJoin["Unkown[", type$, "]"]]//": "//msg$;

    If[prof && Not[LogProfile[class, func]], level = INF];

    If[level < -2 || RealQ[Debug$Level]    && Debug$Level >= level,
      Print[msg]];
    If[level < -2 || RealQ[Debug$LogLevel] && Debug$LogLevel >= level,
      DebugLog$Logging[msg]];

    If[Not[DebugLog$PanicMode] && type$ === PANIC, DebugLog$Panic[]]];

  ];
DebugLog@DebugLog$Initialize[];
! >>> DebugLog Mix-in class <<<

! End of File
