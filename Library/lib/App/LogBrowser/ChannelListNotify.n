!
! LogBrowser ChannelListNotify Mix-in Class
!
! Maintainor: A.Morita(4794)
! Revision:   $Id: ChannelListNotify.n,v 1.5 2005/08/09 01:08:06 amorita Exp $
! Style:      Mix-in Class Library
! Require:
!

! <<< LogBrowser ChannelListNotify class >>>
ChannelListNotify=Class[{},
  { ModuleFile = "LogBrowser/ChannelListNotify.n",
    ModuleClassName = "ChannelListNotify",
    RevisionID = "$Revision: 1.5 $"[12, -3]
    },
  { ChannelListNotify$Hook, ChannelListNotify$Event
    },

  Constructor[] := (
    ChannelListNotify$Hook = {};
    ChannelListNotify$Event = {};
    );

  RegisterNotifyCallback[RuleDelayed[Command, func_]] := (
    AppendTo[ChannelListNotify$Hook, RuleDelayed[Command, func]];
    If[Length[ChannelListNotify$Event] > 0,
      With[{eventlog = ChannelListNotify$Event}, ChannelListNotify$Event = {};
	Scan[Notify@@##&, eventlog]]]);

  UnregisterNotifyCallback[RuleDelayed[Command, func_]] := (
    ChannelListNotify$Hook = Select[ChannelListNotify$Hook,
      # <=> RuleDelayed[Command, func]&];
    );

  ReceiveNotify[event_, src_, argv___] := Which[
    event[1,8] === "Channel:", With[{id = CL$ChannelRev[src]}, Switch[event,
      "Channel:Construct", Notify["Channel:Append", {id, src}, argv],
      "Channel:Destruct",  RemoveChannel$[id],
      "Channel:RemoveRequest", RemoveChannel[id],
      _, Notify[event, {id, src}, argv]]],
    True, Notify[event, src, argv]];

  Notify[event_] := Notify[event, Undefined];

  Notify[event_, src_, argv___] := If[This === ChannelList,
    Scan[With[{clObj = #},
      clObj@Notify[event, src, argv]]&, ChannelList$Objects],
    If[Length[ChannelListNotify$Hook] < 1,
      AppendTo[ChannelListNotify$Event, {event, argv}],
      Scan[Command[event, src, argv]/.#&, ChannelListNotify$Hook]]];

  ];
! >>> LogBrowser ChannelListNotify class <<<

LogBrowser@RegisterModule["System", ChannelListNotify];

! End of File
