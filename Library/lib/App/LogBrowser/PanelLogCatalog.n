!
! LogBrowser LogCatalog Panel Mix-in Class
!
! Maintainor: A.Morita(4794)
! Revision:   $Id: PanelLogCatalog.n,v 1.44 2007/03/27 02:24:53 amorita Exp $
! Style:      Mixin Class Library
! Require:    Prog/QFunctions.n
!             Widget/DateChooser.n
!             Widget/PeriodChooser.n
!             App/LogBrowser/TimeRange.n
!
Library@Require["Prog/QFunctions",
  "Widget/DateChooser", "Widget/PeriodChooser"];
Library@Require["App/LogBrowser/TimeRange"];

! <<< LogBrowser LogCatalog Panel Mix-in class >>>
Panel$LogCatalog=Class[{},
  { ModuleFile = "LogBrowser/PanelLogCatalog.n",
    ModuleClassName = "Panel$LogCatalog",
    RevisionID = "$Revision: 1.44 $"[12, -3],
    etc$Directory = Library@FindDirectory["App/LogBrowser/etc"]
    },
  {
    },

  CatalogDialog[catalog_, clObj_, stat$_, op___Rule] := Module[{
    opt = Override[op, Prefix->"", Title->"Channel Selector"],
    wc = $WildCard,
    dir$change, topoflistbox, pointer, search$query, tabname, tr$change,
    w, f, cf,
    sb, lBox, eFilter, eQuery, bDir, mDir, tStatus, bAdd,
    tab, location, filter, query,
    fTimeRange, oTimeRange, tTimeRange, mTimeRange,
    fixedBegin, fixedEnd, expandBegin, movingPeriod,
    tid, type, begin, end,
    FontSize = 14,
    ListBoxWidth = 47, ListBoxHeight = 19,
    ListBoxBorderWidth = 2, ListBoxSelectBorderWidth = 1,
    def = {"Tab"->"Directory",
      "Directory:Location"->"", "Directory:Filter"->"",
      "Directory:YView"->1, "Directory:Selection"->{},
      "Search:Query"->"", "Search:LastQuery"->"",
      "Search:YView"->1, "Search:Selection"->{},
      "TimeRangeID"->0, "TimeRegionType"->"Fixed",
      "TimeRegion"->With[{now = Floor[FromDate[] / 60] * 60},
	{now - 3600, now}],
      Null[]}, stat,
    r, lastquery},

    topoflistbox[w:Widget[_, ListBox[___]]] := Module[{
      height = w[Height], yview = w[YView]},
      If[StringQ[yview],
	yview = ToExpression["{"//StringReplace[yview, " "->","]//"}"]];
      Ceiling[height * yview[[1]] / (yview[[2]] - yview[[1]]) + 0.5]];

    pointer[] := With[{wsym = Widget/.$Event},
      If[wsym[[2,0]] <=> ListBox, Return[Undefined]];
      With[{yview = topoflistbox[wsym],
	line = Floor[((Y/.$Event) - wsym[BorderWidth] - 1)
	  / ((FontSize + 1) + 2 * wsym[SelectBorderWidth])]},
	yview + line]];

    dir$change[loc_String] := Module[{sel},
      If[loc <=> "../", location = location//loc,
	With[{pos = StringPosition[location, "/"]},
	  Which[
	    Length[pos] < 1, Return[],
	    Length[pos] < 2, location = "",
	    Length[pos] > 1 && pos[[-1,1]] - pos[[-2,2]] > 1,
	    location = location[1, pos[[-2,1]]],
	    location[pos[[-1,1]] - 2, pos[[-1,1]]] === "://",
	    location = ""]]];
      lBox["Directory"][Delete] = {1, "end"};
      If[location <=> "", lBox["Directory"][Insert] = {1, "../"}];
      sel = catalog@ls[location[1,-2]];

      If[filter <=> "", $WildCard = "SAD";
	With[{n0 = Length[Select[sel, #[-1] <=> "/"&]]},
	  sel = Select[sel, #[-1] === "/" || StringMatchQ[#, filter]&];
	  tStatus["Directory"] = StandardForm[StringJoin["Hit ",
	    Length[Select[sel, #[-1] <=> "/"&]], "/", n0, " record(s)"]]],
	  tStatus["Directory"] = StandardForm[StringJoin["Hit ",
	    Length[Select[sel, #[-1] <=> "/"&]], " record(s)"]]];
      lBox["Directory"][Insert] = {1, sel}];

    search$query[] := (
      lastquery = query; $WildCard = "RegExp";
      tStatus["Search"] = "Searching "//lastquery//"..."; Update[IdleTasks];
      With[{hit = catalog@search[lastquery, Match->Record]},
	tStatus["Search"] = StandardForm[StringJoin["Hit ",
	  Length[hit], " record(s)"]];
	lBox["Search"][Delete] = {1, "end"};
	lBox["Search"][Insert] = {1, hit}]);

    tabname[t_String] := t;

    tabname["Fixed"]  = "Fixed Range";
    tabname["Expand"] = "Auto Expand Trend";
    tabname["Moving"] = "Moving Trend";

    tr$change["Text"] := StandardForm[
      If[tid > 0,
	type = TimeRange@TimeRange$Object[tid]@Type[];
	{begin, end} = TimeRange@TimeRange$Object[tid]@Range[];
	With[{pos = Position[{"Fixed", "Expand", "Moving"}, type]},
	  fTimeRange@SelectTab$[If[pos <=> {}, pos[[1,1]], 1]]]];
      tTimeRange = If[tid > 0,
	tid//": "//TimeRange@TimeRange$Object[tid]@Label[], "New Time Range"]];

    tr$change["Menu"] := StandardForm[
      DeleteWidget[mTimeRange];
      mTimeRange = Menu[oTimeRange, Add->Append[
	Map[With[{j = #,
	  text = #//": "//TimeRange@TimeRange$Object[#]@Label[]},
	  RadioButton[Text->text, Value->j, Variable:>tid,
	    Command:>(tr$change["Text"];
	      {begin, end} = TimeRange@TimeRange$Object[tid]@Range[];
	      )]]&, TimeRange@Active[]],
	RadioButton[Text->"New Time Range", Value->0, Variable:>tid,
	  Command:>(tr$change["Text"];
	    )]]];
      tr$change["Text"]];

    stat = Override[Select[stat$, RuleQ], def];
    tab = "Tab"/.stat;
    tid = "TimeRangeID"/.stat;
    If[Position[TimeRange@Active[], tid] <=> {},
      type = TimeRange@TimeRange$Object[tid]@Type[];
      {begin, end} = TimeRange@TimeRange$Object[tid]@Range[],
      tid = 0; type = "TimeRegionType"/.stat;
      {begin, end} = "TimeRegion"/.stat];

    w = KBDialogFrame["Channel:Create:Panel", f,
      Null@@First[SwitchCases[opt, {Rule[Title, _]}]]];
    w[State] = "withdraw"; (* Hide dialog window under construction... *)
    cf = KBFComponentFrame[f, Add->{
      KBFFrameTabed[InitialTab->tab, Add->{
	KBFTab[TabName->"Directory", Command:>(tab = "Directory"), Add->{
	  KBFGroup[Frame->False, Height->0],
	  KBFString[Text->"Location:", Variable:>location, EntryWidth->30,
	    WidgetOption->{State->"disabled"}],
	  KBFComponent[ComponentName:>MenuButton, NextColumn->True,
	    WidgetVariable:>bDir,
	    WidgetOption->{BorderWidth->1, Background->f[Background],
	      Relief->"raised", PadX->1, PadY->1, IPadY->1,
	      Bitmap->"@"//etc$Directory//"/dirmenu.xbm"}],
	  KBFHook[Command:>(mDir = Menu[bDir,
	    PostCommand:>Module[{end = 0, path = location, len},
	      len = StringLength[path];
	      mDir[Delete] = {1, "end"};
	      mDir[Add] = Map[With[{path, p = #[[2]]},
		If[path[p - 2, p] <=> "://", Button[Text->path[1, p],
		  If[p === len, Null[],
		    Command:>(location = path[1, p]; dir$change[""])]],
		  end = p; Break[]]]&, Reverse[StringPosition[path, "/"]]];
	      mDir[Add] = With[{path, end},
		{ If[end < 1, Null[], Button[Text->path[1, end],
		  Command:>(location = path[1, end]; dir$change[""])]],
		  Button[Text->"/",
		    Command:>(location = ""; dir$change[""])]}];
	      ]])],
	  KBFButton[NextColumn->True,
	    WidgetOption->{Bitmap->"@"//etc$Directory//"/dirup.xbm"},
	    Command:>dir$change["../"]],
	  KBFGroup[Frame->False, Height->0],
	  KBFString[Text->"Filter:", Variable:>filter, EntryWidth->30,
	    WidgetVariable:>eFilter],
	  KBFButton[NextColumn->True, Text->"Apply", Command:>dir$change[""]],
	  KBFGroup[Frame->False, Height->0],
	  KBFComponent[ComponentName:>ScrollBar,
	    WidgetVariable:>sb["Directory"], WidgetOption->{
	      Orient->"vertical", Fill->"y", Side->"right",
	      Null[]}],
	  KBFComponent[ComponentName:>ListBox,
	    WidgetVariable:>lBox["Directory"], WidgetOption->{
	      YScrollCommand:>sb["Directory"][Set],
	      SelectMode->"extended",
	      Items->{}, Font->TextFont["fixed", FontSize],
	      Width->ListBoxWidth, Height->ListBoxHeight,
	      BorderWidth->ListBoxBorderWidth,
	      SelectBorderWidth->ListBoxSelectBorderWidth,
	      Side->"left",
	    Null[]}],
	  KBFGroup[Frame->False, Height->0],
	  KBFText[Variable:>tStatus["Directory"]],
	  KBFHook[Command:>(
	    Bind[eFilter, "<Key-Return>", dir$change[""]];
	    Bind[lBox["Directory"], "<Double-Button-1>", Module[{sel},
	      sel = lBox["Directory"][GetText[Selection]];
	      If[sel === {},
		lBox["Directory"][Select$Set] =  pointer[];
		sel = lBox["Directory"][GetText[Selection]]];
	      sel = Select[sel, #[-1] === "/"&];
       	      If[Length[sel] > 0, dir$change[First[sel]], bAdd[Invoke]]]];

	    filter = "Directory:Filter"/.stat;
	    location = "Directory:Location"/.stat; dir$change[""];
	    lBox["Directory"][YView] = "Directory:YView"/.stat;
	    Scan[(lBox["Directory"][Select$Set] = #)&,
	      "Directory:Selection"/.stat])],
	  }],
	KBFTab[TabName->"Search", Command:>(tab = "Search"), Add->{
	  KBFFrame[Add->{
	    KBFString[Text->"Query:", Variable:>query, EntryWidth->30,
	      WidgetVariable:>eQuery],
	    KBFButton[Text->"Go", NextColumn->True, Command:>search$query[]],
	    }],
	  KBFGroup[Frame->False, Height->0],
	  KBFComponent[ComponentName:>ScrollBar,
	    WidgetVariable:>sb["Search"], WidgetOption->{
	      Orient->"vertical", Fill->"y", Side->"right",
	      Null[]}],
	  KBFComponent[ComponentName:>ListBox,
	    WidgetVariable:>lBox["Search"], WidgetOption->{
	      YScrollCommand:>sb["Search"][Set],
	      SelectMode->"extended",
	      Items->{}, Font->TextFont["fixed", FontSize],
	      Width->ListBoxWidth, Height->ListBoxHeight+1,
	      BorderWidth->ListBoxBorderWidth,
	      SelectBorderWidth->ListBoxSelectBorderWidth,
	      Side->"left",
	    Null[]}],
	  KBFGroup[Frame->False, Height->0],
	  KBFText[Variable:>tStatus["Search"]],
	  KBFHook[Command:>(
	    Bind[eQuery, "<Key-Return>", search$query[]];
	    query = "Search:LastQuery"/.stat; search$query[];
	    query = "Search:Query"/.stat;
	    lBox["Search"][YView] = "Search:YView"/.stat;
	    Scan[(lBox["Search"][Select$Set] = #)&,
	      "Search:Selection"/.stat])],
	  }],
	}],

      KBFGroup[Text->"TimeRange"],
      KBFOptionMenu[WidgetVariable:>oTimeRange, Variable:>tTimeRange,
	WidgetOption->{Justify->"left", Width->48}],
      KBFHook[Command:>(tr$change["Menu"])],
      KBFFrameTabed[InitialTab->tabname[type], Add->{
	KBFTab[TabName->tabname["Fixed"],
	  Command:>(type = "Fixed";
	    fixedBegin = begin; fixedEnd = end),
	  DeselectCommand:>(begin = fixedBegin; end = fixedEnd),
	  Add->{
	    KBFText[Text->"Fixed Time Range from Begin to End"],
	    KBFComponent[ComponentName:>DateChooser,
	      WidgetOption->{Variable:>fixedBegin, Text->"Begin: "}],
	    KBFComponent[ComponentName:>DateChooser,
	      WidgetOption->{Variable:>fixedEnd,   Text->"End:   "}],
	    }],

	KBFTab[TabName->tabname["Expand"],
	  Command:>(type = "Expand";
	    expandBegin = begin),
	  DeselectCommand:>(begin = expandBegin),
	  Add->{
	    KBFText[Text->"Auto Expand Time Range from Begin to Now"],
	    KBFComponent[ComponentName:>DateChooser,
	      WidgetOption->{Variable:>expandBegin, Text->"Begin: "}],
	    }],

	KBFTab[TabName->tabname["Moving"],
	  Command:>(type = "Moving";
	    movingPeriod = Abs[end - begin]),
	  DeselectCommand:>(begin = end - movingPeriod),
	  Add->{
	    KBFText[Text->"Moving Trend Range"],
	    KBFComponent[ComponentName:>PeriodChooser,
	      WidgetOption->{Variable:>movingPeriod, Text->"Width: "}],
	    }],
	}, WidgetVariable:>fTimeRange],

      KBFFrame[Add->{
	KBFButton[Text->"Add",    WidgetOption->{Width->8}, NextColumn->True,
	  WidgetVariable:>bAdd,
	  Command:>Module[{sel = Switch[tab,
	    "Directory", Map[location//#&,
	      Select[lBox["Directory"][GetText[Selection]], #[-1] <=> "/"&]],
	    "Search", lBox["Search"][GetText[Selection]],
	    _, {}]},
	    If[tid < 1,
	      tid = TimeRange@Create[type, Switch[type,
		"Fixed",  Range->Sort[{fixedBegin, fixedEnd}],
		"Expand", Begin->expandBegin,
		"Moving", Period->movingPeriod,
		_, Null[]]],
	      TimeRange@TimeRange$Object[tid]@Config[Type->type, Switch[type,
		"Fixed",  Range->Sort[{fixedBegin, fixedEnd}],
		"Expand", Begin->expandBegin,
		"Moving", Period->movingPeriod,
		_, Null[]]]];
	    tr$change["Menu"];
	    Scan[With[{entry = #}, clObj@AddChannel[
	      "URL"->StringJoin[Prefix/.opt, entry], "TimeRangeID"->tid,
	      "ShowLegend"->True]]&, sel]]],
	KBFButton[Text->"Close", WidgetOption->{Width->8}, NextColumn->True,
	  Command:>(TkReturn[0])],
	}],
      }];
    w[Close] := TkReturn[0]; (* Bind Close event as Cancel Button *)

    (* Waiting construction of complex widget: KBFTabFrame *)
    Do[(Pause[0.01]; Update[TimerTasks]; (* Invoke After[] events *)
      Update[IdleTasks]), {loop, 5}];
    w[State] = "normal"; (* Show dialog window *)
    r = TkWait[]; w[State] = "withdraw";

    stat = {"Tab"->tab,
      "Directory:Location"->location, "Directory:Filter"->filter,
      "Directory:YView"->topoflistbox[lBox["Directory"]],
      "Directory:Selection"->lBox["Directory"][Selection],
      "Search:Query"->query, "Search:LastQuery"->lastquery,
      "Search:YView"->topoflistbox[lBox["Search"]],
      "Search:Selection"->lBox["Search"][Selection],
      "TimeRangeID"->tid, "TimeRegionType"->type,
      Switch[type,
	"Fixed",  "TimeRegion"->Sort[{fixedBegin, fixedEnd}],
	"Expand", "TimeRegion"->{expandBegin, end},
	"Moving", "TimeRegion"->{end - movingPeriod, end},
	_, Null[]],
	Null[]};

    cf =.; w[Close] := None; w[Close];

    $WildCard = wc; stat];

  ];
! >>> LogBrowser LogCatalog Panel Mix-in class <<<

LogBrowser@RegisterModule["System", Panel$LogCatalog];

! End of File
