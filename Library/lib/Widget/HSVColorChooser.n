!
! HSV Color Chooser Widget
!
! Maintainor: A.Morita(4794)
! Revision:   $Id: HSVColorChooser.n,v 1.12 2005/07/26 04:53:28 amorita Exp $
! Style:      Widget Class Library
! Require:    Misc/Convert.n
!
Library@Require["Misc/Convert.n"];

! <<< HSVColorChooser widget class >>>
HSVColorChooser = Class[{}, (* HSV Color Chooser Widget *)
  { def = {ColorTipSize->80}
    },
  { H, S, V,
    f0, fL, fH, fS, fV, tH, tS, tV, sH, sS, sV, c, palette,
    variable
    },

  Destructor[] := (
    If[variable <=> {}, With[{vsym = Extract[variable, {1, 2}, Unevaluated$]},
      Clear[vsym];
      vsym = This@GetHSV[]]];
    DeleteWidget[palette];
    DeleteWidget[f0]);

  Constructor[f_] := Module[{v, size,
    topt = {Side->"left", TextAnchor->"s", Fill->"y", PadY->3},
    sopt = {Side->"left", HighlightThickness->0, Command:>UpdateColorTip[],
      Orient->"horizontal", ShowValue->True, Resolution->1, Length->100},
    fopt, opt, rem},

    {variable, size, fopt, opt, rem} = SwitchCases[Override[Options, def,
      Background->f[Background], HighlightBackground->f[Background]],
      {RuleDelayed[Variable, _], Rule[ColorTipSize, _],
	Rule[Background, _], Rule[HighlightBackground, _], _}];

    If[size <=> {}, size = size[[1,2]]];
    If[Not[RealQ[size] && size > 0], size = ColorTipSize/.def];

    f0 = Frame[f, Null@@fopt, Null@@rem];

    c = Canvas[f0, Side->"left",Width->size, Height->size,
      HighlightThickness->0, Anchor->"s", PadX->10, PadY->15,
      Null@@fopt, Null@@opt];
    c[Create$Rectangle]={{0, 0, size, size}, Tags->"cTip",
      Width->1, Outline->"Black"};
    Bind[c, "<Button-1>", PopupPalette[], Tags->"cTip"];
    Bind[c, "<Button-3>", PopupPalette[], Tags->"cTip"];

    fL = Frame[f0, Side->"right", Null@@fopt];

    fH = Frame[fL, Side->"top", Null@@fopt];
    fS = Frame[fL, Side->"top", Null@@fopt];
    fV = Frame[fL, Side->"top", Null@@fopt];

    tH = TextLabel[fH, Text->"H:", Null@@topt, Null@@fopt];
    tS = TextLabel[fS, Text->"S:", Null@@topt, Null@@fopt];
    tV = TextLabel[fV, Text->"V:", Null@@topt, Null@@fopt];

    sH = Scale[fH, From->0, To->360, Variable:>H, Null@@sopt, Null@@fopt];
    sS = Scale[fS, From->0, To->100, Variable:>S, Null@@sopt, Null@@fopt];
    sV = Scale[fV, From->0, To->100, Variable:>V, Null@@sopt, Null@@fopt];

    paletteList = MakePalette[];
    palette = Menu[f0];
    palette[Add] = Map[With[{i = #[[1]], break = #[[2]], color = #[[3]]},
      Button[Text->" ", Font->TextFont["fixed", 16], ColumnBreak->break,
	Command:>SetHSV[color],	Background->Convert@HSV2X11Color[color],
	ActiveBackground->Convert@HSV2X11Color[color]]]&,
      Table[{i, Mod[i - 1, 6] === 0, {(i - 1) / 36, 1, 1}}, {i, 36}]];

    If[variable <=> {}, With[{vsym = Extract[variable, {1, 2}, Unevaluated$]},
      v = vsym;
      Clear[vsym];
      (vsym = val_) ^:= This@SetHSV[val];
      vsym := This@GetHSV[];
      vsym = v]];

    UpdateColorTip[]];

  UpdateColorTip[] := (c[ItemConfigure] = {"cTip",
    Fill->Convert@HSV2X11Color[H / 360, S / 100, V / 100]});

  GetHSV[] := {H / 360, S / 100, V / 100};

  SetHSV[{h_Real, s_Real, v_Real}] := (
    H = Mod[h, 1] * 360;
    S = Restrict[s, 0, 1] * 100;
    V = Restrict[v, 0, 1] * 100;
    UpdateColorTip[]);

  PopupPalette[] := (palette[Popup] = {
    (X/.$Event) + WidgetInformation[Widget/.$Event, RootX],
    (Y/.$Event) + WidgetInformation[Widget/.$Event, RootY], 3});

  ];
! >>> HSVColorChooser widget class <<<
! End of File
