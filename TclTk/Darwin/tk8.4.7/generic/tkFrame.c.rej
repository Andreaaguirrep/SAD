***************
*** 19,24 ****
  #include "tkPort.h"
  #include "tkInt.h"
  
  /*
   * The following enum is used to define the type of the frame.
   */
--- 19,34 ----
  #include "tkPort.h"
  #include "tkInt.h"
  
+ #define DEF_LABELFRAME_ALTFONT "Symbol -14"
+ #define DEF_LABELFRAME_SCRFONT "Helvetica -10"
+ #define DEF_LABELFRAME_ALTSCRFONT "Symbol -10"
+ 
+ EXTERN Tk_TextLayout    Tk_KGComputeTextLayout _ANSI_ARGS_((Tk_Font font,
+                             CONST char *string, int numChars, int wrapLength,
+                             Tk_Justify justify, int flags, int *widthPtr,
+                             int *heightPtr, Tk_Font, Tk_Font, Tk_Font,
+                             GC, GC, GC, GC, int));
+ 
  /*
   * The following enum is used to define the type of the frame.
   */
***************
*** 118,123 ****
  				 * display in button. */
      Tk_Font tkfont;		/* Value of -font option: specifies font
  				 * to use for display text. */
      XColor *textColorPtr;	/* Value of -fg option: specifies foreground
  				 * color in normal mode. */
      int labelAnchor;		/* Value of -labelanchor option: specifies
--- 128,136 ----
  				 * display in button. */
      Tk_Font tkfont;		/* Value of -font option: specifies font
  				 * to use for display text. */
+     Tk_Font tkaltfont;	/* Information about alt text font, or NULL. */
+     Tk_Font tkscriptfont;	/* Information about script font, or NULL. */
+     Tk_Font tkaltscriptfont;	/* Information about alt script font, or NULL. */
      XColor *textColorPtr;	/* Value of -fg option: specifies foreground
  				 * color in normal mode. */
      int labelAnchor;		/* Value of -labelanchor option: specifies
***************
*** 130,141 ****
       */
  
      GC textGC;			/* GC for drawing text in normal mode. */
      Tk_TextLayout textLayout;	/* Stored text layout information. */
      XRectangle labelBox;	/* The label's actual size and position. */
      int labelReqWidth;		/* The label's requested width. */
      int labelReqHeight;		/* The label's requested height. */
      int labelTextX, labelTextY;	/* Position of the text to be drawn. */
  
  } Labelframe;
  
  /*
--- 143,159 ----
       */
  
      GC textGC;			/* GC for drawing text in normal mode. */
+     GC altGc;
+     GC scriptGc;
+     GC altScriptGc;
+ 
      Tk_TextLayout textLayout;	/* Stored text layout information. */
      XRectangle labelBox;	/* The label's actual size and position. */
      int labelReqWidth;		/* The label's requested width. */
      int labelReqHeight;		/* The label's requested height. */
      int labelTextX, labelTextY;	/* Position of the text to be drawn. */
  
+     int bsmplw;
  } Labelframe;
  
  /*
***************
*** 282,287 ****
  	(char *) NULL, 0, -1, 0, (ClientData) "-foreground", 0},
      {TK_OPTION_FONT, "-font", "font", "Font",
  	DEF_LABELFRAME_FONT, -1, Tk_Offset(Labelframe, tkfont), 0, 0, 0},
      {TK_OPTION_COLOR, "-foreground", "foreground", "Foreground",
  	DEF_LABELFRAME_FG, -1, Tk_Offset(Labelframe, textColorPtr), 0, 0, 0},
      {TK_OPTION_STRING_TABLE, "-labelanchor", "labelAnchor", "LabelAnchor",
--- 300,311 ----
  	(char *) NULL, 0, -1, 0, (ClientData) "-foreground", 0},
      {TK_OPTION_FONT, "-font", "font", "Font",
  	DEF_LABELFRAME_FONT, -1, Tk_Offset(Labelframe, tkfont), 0, 0, 0},
+     {TK_OPTION_FONT, "-altfont", "altfont", "Font",
+ 	DEF_LABELFRAME_ALTFONT, -1, Tk_Offset(Labelframe, tkaltfont), 0, 0, 0},
+     {TK_OPTION_FONT, "-scriptfont", "scriptfont", "Font",
+ 	DEF_LABELFRAME_SCRFONT, -1, Tk_Offset(Labelframe, tkscriptfont), 0, 0, 0},
+     {TK_OPTION_FONT, "-altscriptfont", "altscriptfont", "Font",
+ 	DEF_LABELFRAME_ALTSCRFONT, -1, Tk_Offset(Labelframe, tkaltscriptfont), 0, 0},
      {TK_OPTION_COLOR, "-foreground", "foreground", "Foreground",
  	DEF_LABELFRAME_FG, -1, Tk_Offset(Labelframe, textColorPtr), 0, 0, 0},
      {TK_OPTION_STRING_TABLE, "-labelanchor", "labelAnchor", "LabelAnchor",
***************
*** 662,668 ****
      if (framePtr->type == TYPE_LABELFRAME) {
  	Labelframe *labelframePtr = (Labelframe *) framePtr;
  	labelframePtr->labelAnchor = LABELANCHOR_NW;
  	labelframePtr->textGC = None;
      }
  
      /*
--- 686,699 ----
      if (framePtr->type == TYPE_LABELFRAME) {
  	Labelframe *labelframePtr = (Labelframe *) framePtr;
  	labelframePtr->labelAnchor = LABELANCHOR_NW;
+ 	labelframePtr->tkfont = NULL;
+ 	labelframePtr->tkaltfont = NULL;
+ 	labelframePtr->tkscriptfont = NULL;
+ 	labelframePtr->tkaltscriptfont = NULL;
  	labelframePtr->textGC = None;
+ 	labelframePtr->altGc = None;
+ 	labelframePtr->scriptGc = None;
+ 	labelframePtr->altScriptGc = None;
      }
  
      /*
***************
*** 847,855 ****
  
      if (framePtr->type == TYPE_LABELFRAME) {
  	Tk_FreeTextLayout(labelframePtr->textLayout);
  	if (labelframePtr->textGC != None) {
  	    Tk_FreeGC(framePtr->display, labelframePtr->textGC);
  	}
      }
      if (framePtr->colormap != None) {
  	Tk_FreeColormap(framePtr->display, framePtr->colormap);
--- 878,899 ----
  
      if (framePtr->type == TYPE_LABELFRAME) {
  	Tk_FreeTextLayout(labelframePtr->textLayout);
+ 	Tk_FreeFont(labelframePtr->tkfont);
+ 	Tk_FreeFont(labelframePtr->tkaltfont);
+ 	Tk_FreeFont(labelframePtr->tkscriptfont);
+ 	Tk_FreeFont(labelframePtr->tkaltscriptfont);
  	if (labelframePtr->textGC != None) {
  	    Tk_FreeGC(framePtr->display, labelframePtr->textGC);
  	}
+ 	if (labelframePtr->altGc != None) {
+ 	    Tk_FreeGC(framePtr->display, labelframePtr->altGc);
+ 	}
+ 	if (labelframePtr->scriptGc != None) {
+ 	    Tk_FreeGC(framePtr->display, labelframePtr->scriptGc);
+ 	}
+ 	if (labelframePtr->altScriptGc != None) {
+ 	    Tk_FreeGC(framePtr->display, labelframePtr->altScriptGc);
+ 	}
      }
      if (framePtr->colormap != None) {
  	Tk_FreeColormap(framePtr->display, framePtr->colormap);
***************
*** 1112,1117 ****
  	    Tk_FreeGC(framePtr->display, labelframePtr->textGC);
  	}
  	labelframePtr->textGC = gc;
  
  	/*
  	 * Calculate label size.
--- 1156,1182 ----
  	    Tk_FreeGC(framePtr->display, labelframePtr->textGC);
  	}
  	labelframePtr->textGC = gc;
+ 	gcValues.font = Tk_FontId(labelframePtr->tkaltfont);
+ 	gc = Tk_GetGC(tkwin, GCForeground | GCFont | GCGraphicsExposures,
+ 		&gcValues);
+ 	if (labelframePtr->altGc != None) {
+ 	    Tk_FreeGC(framePtr->display, labelframePtr->altGc);
+ 	}
+ 	labelframePtr->altGc = gc;
+ 	gcValues.font = Tk_FontId(labelframePtr->tkscriptfont);
+ 	gc = Tk_GetGC(tkwin, GCForeground | GCFont | GCGraphicsExposures,
+ 		&gcValues);
+ 	if (labelframePtr->scriptGc != None) {
+ 	    Tk_FreeGC(framePtr->display, labelframePtr->scriptGc);
+ 	}
+ 	labelframePtr->scriptGc = gc;
+ 	gcValues.font = Tk_FontId(labelframePtr->tkaltscriptfont);
+ 	gc = Tk_GetGC(tkwin, GCForeground | GCFont | GCGraphicsExposures,
+ 		&gcValues);
+ 	if (labelframePtr->altScriptGc != None) {
+ 	    Tk_FreeGC(framePtr->display, labelframePtr->altScriptGc);
+ 	}
+ 	labelframePtr->altScriptGc = gc;
  
  	/*
  	 * Calculate label size.
***************
*** 1122,1130 ****
  	if (anyTextLabel) {
  	    labelText = Tcl_GetString(labelframePtr->textPtr);
  	    Tk_FreeTextLayout(labelframePtr->textLayout);
- 	    labelframePtr->textLayout = Tk_ComputeTextLayout(labelframePtr->tkfont,
  		    labelText, -1, 0, TK_JUSTIFY_CENTER, 0,
  		    &labelframePtr->labelReqWidth, &labelframePtr->labelReqHeight);
  	    labelframePtr->labelReqWidth += 2 * LABELSPACING;
  	    labelframePtr->labelReqHeight += 2 * LABELSPACING;
  	} else if (anyWindowLabel) {
--- 1187,1206 ----
  	if (anyTextLabel) {
  	    labelText = Tcl_GetString(labelframePtr->textPtr);
  	    Tk_FreeTextLayout(labelframePtr->textLayout);
+ 	    labelframePtr->bsmplw = (labelText==NULL)||(strchr(labelText,'`') ? 0 : 1);
+ 	    if (labelframePtr->bsmplw)
+ 	      labelframePtr->textLayout = Tk_ComputeTextLayout(labelframePtr->tkfont,
  		    labelText, -1, 0, TK_JUSTIFY_CENTER, 0,
  		    &labelframePtr->labelReqWidth, &labelframePtr->labelReqHeight);
+ 	    else
+ 	      labelframePtr->textLayout = Tk_KGComputeTextLayout(labelframePtr->tkfont,
+ 		    labelText, -1, 0, TK_JUSTIFY_CENTER, 0,
+ 		    &labelframePtr->labelReqWidth, &labelframePtr->labelReqHeight,
+ 		    labelframePtr->tkaltfont, labelframePtr->tkscriptfont,
+ 		    labelframePtr->tkaltscriptfont, labelframePtr->textGC,
+ 		    labelframePtr->altGc, labelframePtr->scriptGc,
+ 		    labelframePtr->altScriptGc, 0);
+ 
  	    labelframePtr->labelReqWidth += 2 * LABELSPACING;
  	    labelframePtr->labelReqHeight += 2 * LABELSPACING;
  	} else if (anyWindowLabel) {
***************
*** 1538,1544 ****
  			clipRegion);
  	    }
  
-             Tk_DrawTextLayout(framePtr->display, pixmap,
                      labelframePtr->textGC, labelframePtr->textLayout,
                      labelframePtr->labelTextX + LABELSPACING,
                      labelframePtr->labelTextY + LABELSPACING, 0, -1);
--- 1614,1627 ----
  			clipRegion);
  	    }
  
+ 
+ 	    if (labelframePtr->bsmplw)
+ 	      Tk_DrawTextLayout(framePtr->display, pixmap,
+                     labelframePtr->textGC, labelframePtr->textLayout,
+                     labelframePtr->labelTextX + LABELSPACING,
+                     labelframePtr->labelTextY + LABELSPACING, 0, -1);
+ 	    else
+ 	      Tk_KGDrawTextLayout(framePtr->display, pixmap,
                      labelframePtr->textGC, labelframePtr->textLayout,
                      labelframePtr->labelTextX + LABELSPACING,
                      labelframePtr->labelTextY + LABELSPACING, 0, -1);
