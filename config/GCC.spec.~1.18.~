# Generic Object Makefile OS Compiler Support Part -- GCC
#

# Default GCC version
__GCC_DEFAULT?=4.4.5

# Recommended GCC version
__GCC_RECOMMEND=4.6.0

ifeq ($(DEBUG),GCC)
debug:
	@echo "_USE_GCC_DEFAULT=$(_USE_GCC_DEFAULT)"
	@echo "_USE_GCC=$(_USE_GCC)"
	@echo "_USE_G95=$(_USE_G95)"
	@echo "_USE_GNU_FORTRAN=$(_USE_GNU_FORTRAN)"
	@echo "HAVE_F_LNBLNK=$(HAVE_F_LNBLNK)"
	@echo "HAVE_F_FGETC=$(HAVE_F_FGETC)"
	@echo "SYS_FOPT_ENABLE_BACKSLASH_ESCAPE=$(SYS_FOPT_ENABLE_BACKSLASH_ESCAPE)"
	@echo "SYS_FOPT_DISABLE_BACKSLASH_ESCAPE=$(SYS_FOPT_DISABLE_BACKSLASH_ESCAPE)"
	@echo "SYS_DEPOBJ=$(SYS_DEPOBJ)"
	@echo "_GCC_RLIBDIR=$(_GCC_RLIBDIR)"
	@echo "OPT_RLIBDIR=$(OPT_RLIBDIR)"
	@echo "_SYS_GCC_ABIOPT=$(_SYS_GCC_ABIOPT)"
endif

# _USE_* <- major * 10^6 + minor * 10^3 + patch-level[minor,patch-level < 10^3]
ifdef USE_GCC
_USE_GCC=$(shell echo "$(USE_GCC)" | sed -e 's/ *//g' -e 's/[^0-9.].*//' -e 's/\.*$$/.0.0.0./' -e 's/^\.*//' -e 's/^\([^.][^.]*\)\.\([^.][^.]*\)\.\([^.][^.]*\)\..*/\1.000\2.000\3/' -e 's/\.[^.]*\([^.][^.][^.]\)/\1/g' -e 's/^0*\(.\)/\1/g')
else
_USE_GCC=0
endif

ifdef USE_G95
_USE_G95=$(shell echo "$(USE_G95)" | sed -e 's/ *//g' -e 's/[^0-9.].*//' -e 's/\.*$$/.0.0.0./' -e 's/^\.*//' -e 's/^\([^.][^.]*\)\.\([^.][^.]*\)\.\([^.][^.]*\)\..*/\1.000\2.000\3/' -e 's/\.[^.]*\([^.][^.][^.]\)/\1/g' -e 's/^0*\(.\)/\1/g')
else
_USE_G95=0
endif

# _USE_GCC_DEFAULT <- __GCC_DEFAULT
_USE_GCC_DEFAULT=$(shell echo "$(__GCC_DEFAULT)" | sed -e 's/ *//g' -e 's/[^0-9.].*//' -e 's/\.*$$/.0.0.0./' -e 's/^\.*//' -e 's/^\([^.][^.]*\)\.\([^.][^.]*\)\.\([^.][^.]*\)\..*/\1.000\2.000\3/' -e 's/\.[^.]*\([^.][^.][^.]\)/\1/g' -e 's/^0*\(.\)/\1/g')

# Use default GCC version if not defined
ifeq ($(_USE_GCC),0)
_USE_GCC=$(_USE_GCC_DEFAULT)
endif

# Check ABI option
_SYS_GCC_ABIOPT=
ifeq ($(ABI),32)
_SYS_GCC_ABIOPT=-m32
endif
ifeq ($(ABI),64)
_SYS_GCC_ABIOPT=-m64
endif
SYS_CC_ABIOPT=$(_SYS_GCC_ABIOPT)
SYS_FC_ABIOPT=$(_SYS_GCC_ABIOPT)
SYS_CXX_ABIOPT=$(_SYS_GCC_ABIOPT)

# Check compiler dependent library location
_GCC_RLIBDIR=$(foreach _dir,$(firstword $(filter-out .,$(foreach _file,libgcc_s.so libiberty.a,$(shell dirname `$(CC) -print-file-name=$(_file)`)))),-L$(realpath $(_dir)))
OPT_RLIBDIR+= $(_GCC_RLIBDIR)

# Check GNU Fortran compiler type
_USE_GNU_FORTRAN=GFORTRAN
ifeq ($(shell test $(_USE_GCC) -lt 4000000 ; echo $$?), 0)
_USE_GNU_FORTRAN=G77
endif
ifeq ($(shell test $(_USE_G95) -gt 0 ; echo $$?), 0)
_USE_GNU_FORTRAN=G95
endif

# Define missing Fortran2008 standard math functions
ifeq ($(shell test $(_USE_GCC) -lt 4004000 ; echo $$?), 0)
FORTRAN_MISSING_MATH_FUNCS+=	hypot
# REAL(8) instance of asinh/acosh/atanh of Fortran2008
FORTRAN_MISSING_MATH_FUNCS+=	asinh acosh atanh
endif

# Default setting for GNU Fortran compiler
HAVE_F_OPEN_DISP_OPT=NO
HAVE_F_FORMAT_Q_EDIT=NO
HAVE_F_FGETC=NO
HAVE_F_LNBLNK=NO
HAVE_F_FLUSH=YES

ifeq ($(_USE_GNU_FORTRAN),G77)
# g77 provides fgetc/lnblnk intrinsic function
HAVE_F_FGETC=YES
HAVE_F_LNBLNK=YES

# -fbackslash is default backslash handling in G77
SYS_FOPT_ENABLE_BACKSLASH_ESCAPE=#-fbackslash
SYS_FOPT_DISABLE_BACKSLASH_ESCAPE=-fno-backslash
endif

ifeq ($(_USE_GNU_FORTRAN),GFORTRAN)
# Construct -fcheck option for gfortran
ifdef USE_GFORTRAN_CHECK
_USE_GFORTRAN_CHECK=$(shell echo $(USE_GFORTRAN_CHECK) | sed -e 's/[ 	][ 	]*/ /g' -e 's/^ *//' -e 's/ *$$//' -e 's/ /,/g')
SYS_FOPT_GFORTRAN_CHECK=
ifneq ($(_USE_GFORTRAN_CHECK),)
SYS_FOPT_GFORTRAN_CHECK=-fcheck=$(_USE_GFORTRAN_CHECK)
endif
endif

# gfortran provides fgetc intrinsic function
HAVE_F_FGETC=YES

# fseek function support SIM for gfortran 4.3.0 or later
SYS_DEPOBJ_FSEEK=sim/fseek_subroutine.o sim/fseek_subroutine_.o
ifeq ($(shell test $(_USE_GCC) -lt 4003000 ; echo $$?), 0)
SYS_DEPOBJ_FSEEK=sim/fseek_Dummy_.o
endif

SYS_DEPOBJ+=sim/unix_fortran_.o
SYS_DEPOBJ+=$(SYS_DEPOBJ_FSEEK)

# -fno-backslash is default backslash handling in GFORTRAN 4.3.0 or later
SYS_FOPT_ENABLE_BACKSLASH_ESCAPE=-fbackslash
SYS_FOPT_DISABLE_BACKSLASH_ESCAPE=#-fno-backslash
ifeq ($(shell test $(_USE_GCC) -lt 4003000 ; echo $$?), 0)
# -fbackslash is default backslash handling in GFORTRAN 4.2.x or prior
SYS_FOPT_ENABLE_BACKSLASH_ESCAPE=#-fbackslash
SYS_FOPT_DISABLE_BACKSLASH_ESCAPE=-fno-backslash
endif
endif

ifeq ($(_USE_GNU_FORTRAN),G95)
SYS_FOPT_tfprinta+= -fsloppy-char
# fseek function support SIM for g95
SYS_DEPOBJ_FSEEK=sim/fseek_subroutine.o sim/fseek_subroutine_.o

SYS_DEPOBJ+=sim/unix_fortran_.o
SYS_DEPOBJ+=$(SYS_DEPOBJ_FSEEK)

# -fbackslash is default backslash handling in G95
SYS_FOPT_ENABLE_BACKSLASH_ESCAPE=#-fbackslash
SYS_FOPT_DISABLE_BACKSLASH_ESCAPE=-fno-backslash
endif

_SYS_FC_G77=g77
_SYS_FC_GFORTRAN=gfortran
_SYS_FC_G95=g95

SYS_FC=$(_SYS_FC_$(_USE_GNU_FORTRAN))
SYS_CC=gcc
SYS_CXX=g++

SYS_FOPT_DYNL_PIC=   -fPIC
SYS_COPT_DYNL_PIC=   -fPIC
SYS_CXXOPT_DYNL_PIC= -fPIC

_SYS_FOPT_G77=		-Wall -ff90        -pedantic
_SYS_FOPT_GFORTRAN=	-Wall -std=gnu \
			-Wno-unused-dummy-argument $(SYS_FOPT_GFORTRAN_CHECK)
_SYS_FOPT_G95=		-Wall -traditional
_SYS_COPT_GCC=		-Wall -std=c99     -pedantic-errors
_SYS_CXXOPT_GCC=	-Wall -std=c++98   -pedantic-errors

ifndef SYS_FOPT
SYS_FOPT=$(_SYS_FOPT_$(_USE_GNU_FORTRAN)) $(SYS_FOPT_DISABLE_BACKSLASH_ESCAPE)
endif
ifndef SYS_COPT
SYS_COPT=$(_SYS_COPT_GCC)
SYS_COPT=$(_SYS_COPT_GCC)
endif
SYS_CXXOPT=$(_SYS_CXXOPT_GCC)

SYS_FOPT+= -fno-second-underscore -fdollar-ok -fargument-alias
# o Disable appending a second underscore to externals
# o Allow dollar signs(`$') in symbol names
# o Specify that arguments may alias each other and globals

# Alignment options
# SAD assumes that all data structures are aligned by octet-bytes
# in order to access via rlist(*) REAL*8 array index.

# Apply 8bytes alignment for function entry point for setfnp_()
SYS_FOPT+= -falign-functions=8

# Apply 16bytes alignment for double on IA-32 architecture.
# Note:
# Natural alignment of Pentium is 4bytes.
# MacOS X for Intel requires 16bytes alignment.
ifeq ($(CPU_ARCH),i386)
SYS_FOPT+=   -mpreferred-stack-boundary=4
SYS_COPT+=   -mpreferred-stack-boundary=4
SYS_CXXOPT+= -mpreferred-stack-boundary=4
endif

# Use GCC plugin
ifneq ($(USE_GCC_PLUGIN),)
ifeq ($(shell test $(_USE_GCC) -ge 4005000 ; echo $$?), 0)
_USE_GCC_PLUGIN=$(shell $(SADSRCDIR)/bin/realpath $(USE_GCC_PLUGIN))
SYS_FOPT+=   -fplugin=$(_USE_GCC_PLUGIN)
SYS_COPT+=   -fplugin=$(_USE_GCC_PLUGIN)
SYS_CXXOPT+= -fplugin=$(_USE_GCC_PLUGIN)
endif
endif

SYS_LDOPT_RUNTIME_PATH=-Wl,-rpath,
SYS_LDOPT_EXPORT_SYMBOL=-Wl,--export-dynamic

# Object specific options
SYS_COPT_gdtoa/gdtoa=-fno-strict-aliasing
SYS_COPT_gdtoa/misc=-fno-strict-aliasing
SYS_COPT_tfProcess_=-fno-strict-aliasing
SYS_FOPT_tffsmatch=-fno-tree-vectorize

# Default debug build options
LIB_COPT=	-g -O1
LIB_CXXOPT=	-g -O1
FOPT=		-g -O1
COPT=		-g -O1
CXXOPT=		-g -O1

# End of File
